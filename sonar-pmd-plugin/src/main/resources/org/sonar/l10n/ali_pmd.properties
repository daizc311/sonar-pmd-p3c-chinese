##p3c##
#AlibabaJavaComments
rule.ali_pmd.CommentsMustBeJavadocFormatRule.name=[p3c]类、类属性、类方法的注释必须使用javadoc规范
rule.ali_pmd.AbstractMethodOrInterfaceMethodMustUseJavadocRule.name=[p3c]所有的抽象方法（包括接口中的方法）必须要用javadoc注释、除了返回值、参数、异常说明外，还必须指出该方法做什么事情，实现什么功能
rule.ali_pmd.ClassMustHaveAuthorRule.name=[p3c]所有的类都必须添加创建者信息。
rule.ali_pmd.EnumConstantsMustHaveCommentRule.name=[p3c]所有的枚举类型字段必须要有注释，说明每个数据项的用途
rule.ali_pmd.AvoidCommentBehindStatementRule.name=[p3c]方法内部单行注释，在被注释语句上方另起一行，使用//注释。方法内部多行注释使用/* */注释。注意与代码对齐
rule.ali_pmd.RemoveCommentedCodeRule.name=[p3c]及时清理不再使用的代码段或配置信息

#AlibabaJavaConcurrent
rule.ali_pmd.ThreadPoolCreationRule.name=[p3c]手动创建线程池，效果会更好哦
rule.ali_pmd.AvoidUseTimerRule.name=[p3c]使用ScheduledExecutorService代替Timer吧
rule.ali_pmd.ThreadShouldSetNameRule.name=[p3c]创建线程或线程池时请指定有意义的线程名称，方便出错时回溯。创建线程池的时候请使用带ThreadFactory的构造函数，并且提供自定义ThreadFactory实现或者使用第三方实现
rule.ali_pmd.AvoidCallStaticSimpleDateFormatRule.name=[p3c]SimpleDateFormat 是线程不安全的类，一般不要定义为static变量，如果定义为static，必须加锁，或者使用DateUtils工具类
rule.ali_pmd.ThreadLocalShouldRemoveRule.name=[p3c]ThreadLocal字段【%s】应该至少调用一次remove()方法。
rule.ali_pmd.AvoidConcurrentCompetitionRandomRule.name=[p3c]【Math.random()】应避免在多线程并发环境下使用
rule.ali_pmd.CountDownShouldInFinallyRule.name=[p3c]【%s()】应该在finally块中调用。
rule.ali_pmd.AvoidManuallyCreateThreadRule.name=[p3c]不要显式创建线程，请使用线程池
rule.ali_pmd.LockShouldWithTryFinallyRule.name=[p3c]锁【%s】必须紧跟try代码块，且unlock要放到finally第一行

#AlibabaJavaConstants
rule.ali_pmd.UpperEllRule.name=[p3c]long或者Long初始赋值时，必须使用大写的L，不能是小写的l，小写容易跟数字1混淆，造成误解
rule.ali_pmd.UndefineMagicConstantRule.name=[p3c]不允许任何魔法值（即未经定义的常量）直接出现在代码中

#AlibabaJavaExceptions
rule.ali_pmdali_pmd.MethodReturnWrapperTypeRule.name=[p3c]返回类型为基本数据类型，return包装数据类型的对象时，自动拆箱有可能产生NPE
rule.ali_pmdali_pmd.AvoidReturnInFinallyRule.name=[p3c]不能在finally块中使用return，finally块中的return返回后方法结束执行，不会再执行try块中的return语句。
rule.ali_pmdali_pmd.TransactionMustHaveRollbackRule.name=[p3c]注解【Transactional】需要设置rollbackFor属性

#AlibabaJavaFlowControl
rule.ali_pmd.SwitchStatementRule.name=[p3c]在一个switch块内，每个case要么通过break/return等来终止，要么注释说明程序将继续执行到哪一个case为止；在一个switch块内，都必须包含一个default语句并且放在最后，即使它什么代码也没有
rule.ali_pmd.NeedBraceRule.name=[p3c]在if/else/for/while/do语句中必须使用大括号，即使只有一行代码，避免使用下面的形式：if (condition) statements;
rule.ali_pmd.AvoidComplexConditionRule.name=[p3c]请不要在条件中使用复杂的表达式
rule.ali_pmd.AvoidNegationOperatorRule.name=[p3c]"!"运算符不利于快速理解

#AlibabaJavaNaming
rule.ali_pmd.ClassNamingShouldBeCamelRule.name=[p3c]类名使用UpperCamelCase风格，必须遵从驼峰形式，但以下情形例外：（领域模型的相关命名）DO / BO / DTO / VO / DAO
rule.ali_pmd.AbstractClassShouldStartWithAbstractNamingRule.name=[p3c]抽象类命名使用Abstract或Base开头
rule.ali_pmd.ExceptionClassShouldEndWithExceptionRule.name=[p3c]【%s】命名应以Exception结尾.
rule.ali_pmd.TestClassShouldEndWithTestNamingRule.name=[p3c]测试类命名以它要测试的类的名称开始，以Test结
rule.ali_pmd.LowerCamelCaseVariableNamingRule.name=[p3c]方法名、参数名、成员变量、局部变量都统一使用lowerCamelCase，必须遵从驼峰形式
rule.ali_pmd.AvoidStartWithDollarAndUnderLineNamingRule.name=[p3c]所有编程相关的命名均不能以下划线或美元符号开始
rule.ali_pmd.ServiceOrDaoClassShouldEndWithImplRule.name=[p3c]常量命名应该全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长
rule.ali_pmd.ConstantFieldShouldBeUpperCaseRule.name=[p3c]常量命名应该全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字
rule.ali_pmd.PackageNamingRule.name=[p3c]包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用单数形式，但是类名如果有复数含义，类名可以使用复数形式
rule.ali_pmd.BooleanPropertyShouldNotStartWithIsRule.name=[p3c]POJO类中的任何布尔类型的变量，都不要加is，否则部分框架解析会引起序列化错误
rule.ali_pmd.ArrayNamingShouldHaveBracketRule.name=[p3c]中括号是数组类型的一部分，数组定义如下：String[] args

#AlibabaJavaOop
rule.ali_pmd.EqualsAvoidNullRule.name=[p3c]Object的equals方法容易抛空指针异常，应使用常量或确定有值的对象来调用equals。
rule.ali_pmd.WrapperTypeEqualityRule.name=[p3c]所有的包装类对象之间值的比较，全部使用equals方法比较。
rule.ali_pmd.PojoMustUsePrimitiveFieldRule.name=[p3c]所有的POJO类属性必须使用包装数据类型。RPC方法的返回值和参数必须使用包装数据类型。所有的局部变量推荐使用基本数据类型。
rule.ali_pmd.PojoNoDefaultValueRule.name=[p3c]定义DO/DTO/VO等POJO类时，不要加任何属性默认值.
rule.ali_pmd.PojoMustOverrideToStringRule.name=[p3c]说明：在方法执行抛出异常时，可以直接调用POJO的toString()方法打印其属性值，便于排查问题
rule.ali_pmd.StringConcatRule.name=[p3c]循环体内，字符串的联接方式，使用StringBuilder的append方法进行扩展
rule.ali_pmd.BigDecimalAvoidDoubleConstructorRule.name=[p3c]禁止使用构造方法BigDecimal(double)的方式把double值转化为BigDecimal对象

#orm
rule.ali_pmd.IbatisMethodQueryForListRule.name=[p3c]iBATIS自带的com.ibatis.sqlmap.client.SqlMapClient.queryForList(String statementName,int start,int size)不推荐使用

#AlibabaJavaOthers
rule.ali_pmd.AvoidPatternCompileInMethodRule.name=[p3c]在使用正则表达式时，利用好其预编译功能，可以有效加快正则匹配速度
rule.ali_pmd.AvoidApacheBeanUtilsCopyRule.name=[p3c]避免用Apache Beanutils进行属性的copy。
rule.ali_pmd.AvoidNewDateGetTimeRule.name=[p3c]获取当前毫秒数：System.currentTimeMillis(); 而不是new Date().getTime()
rule.ali_pmd.AvoidMissUseOfMathRandomRule.name=[p3c]注意 Math.random() 这个方法返回是double类型，注意取值的范围[0,1)（能够取到零值，注意除零异常），如果想获取整数类型的随机数，不要将x放大10的若干倍然后取整，直接使用Random对象的nextInt或者nextLong方法
rule.ali_pmd.MethodTooLongRule.name=[p3c]单个方法的总行数不超过80行
rule.ali_pmd.UseRightCaseForDateFormatRule.name=[p3c]日期格式化字符串[%s]使用错误，应注意使用小写‘y’表示当天所在的年，大写‘Y’代表week in which year
rule.ali_pmd.AvoidDoubleOrFloatEqualCompareRule.name=[p3c]浮点数之间的等值判断，基本数据类型不能用==来比较，包装数据类型不能用equals来判断

#AlibabaJavaSets
rule.ali_pmd.ClassCastExceptionWithToArrayRule.name=[p3c]使用集合转数组的方法，必须使用集合的toArray(T[] array)，传入的是类型完全一样的数组，大小就是list.size()
rule.ali_pmd.UnsupportedExceptionWithModifyAsListRule.name=[p3c]使用工具类Arrays.asList()把数组转换成集合时，不能使用其修改集合相关的方法，它的add/remove/clear方法会抛出UnsupportedOperationException异常。
rule.ali_pmd.ClassCastExceptionWithSubListToArrayListRule.name=[p3c]ArrayList的subList结果不可强转成ArrayList，否则会抛出ClassCastException异常。
rule.ali_pmd.ConcurrentExceptionWithModifyOriginSubListRule.name=[p3c]在subList场景中，高度注意对原列表的修改，会导致子列表的遍历、增加、删除均产生ConcurrentModificationException异常。
rule.ali_pmd.DontModifyInForeachCircleRule.name=[p3c]不要在foreach循环里进行元素的remove/add操作，remove元素请使用Iterator方式
rule.ali_pmd.CollectionInitShouldAssignCapacityRule.name=[p3c]集合初始化时，指定集合初始值大小

rule.ali_pmd.TransactionMustHaveRollbackRule.name=[p3c]如果方法抛出异常，请确保调用回滚
rule.ali_pmd.MethodReturnWrapperTypeRule.name=[p3c]如果返回类型是原始类型，则返回包装类的值可能会导致 NullPointerException
rule.ali_pmd.AvoidReturnInFinallyRule.name=[p3c]永远不要在 finally 块中使用 return。 finally 块中的 return 语句将导致异常或导致 try-catch 块中的返回值被丢弃